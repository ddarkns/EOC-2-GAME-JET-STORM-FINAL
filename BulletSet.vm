function BulletSet.new 1
push constant 3
call Memory.alloc 1
pop pointer 0
push constant 5
pop this 1
push constant 0
pop this 2
push this 1
call Array.new 1
pop this 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
push constant 0
push constant 0
call Bullet.new 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push pointer 0
return
function BulletSet.fire 3
push argument 0
pop pointer 0
push constant 0
pop local 2
push constant 0
pop local 0
push this 2
push this 1
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
label WHILE_EXP0
push local 0
push this 1
lt
push local 2
not
and
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
call Bullet.isActive 1
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
push argument 1
push argument 2
call Bullet.activate 3
pop temp 0
push constant 0
not
pop local 2
push this 2
push constant 1
add
pop this 2
label IF_FALSE1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
label IF_FALSE0
push constant 0
return
function BulletSet.move 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
call Bullet.isActive 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
call Bullet.move 1
pop temp 0
push local 1
call Bullet.isActive 1
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 2
push constant 1
sub
pop this 2
label IF_FALSE1
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function BulletSet.deactivateBullet 1
push argument 0
pop pointer 0
push argument 1
push constant 1
neg
gt
push argument 1
push this 1
lt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push this 0
add
pop pointer 1
push that 0
pop local 0
push local 0
call Bullet.isActive 1
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
call Bullet.dispose 1
pop temp 0
push this 2
push constant 1
sub
pop this 2
label IF_FALSE1
label IF_FALSE0
push constant 0
return
function BulletSet.getActiveBulletPositions 4
push argument 0
pop pointer 0
push this 1
push constant 3
call Math.multiply 2
call Array.new 1
pop local 0
push constant 0
pop local 2
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push this 1
lt
not
if-goto WHILE_END0
push local 1
push this 0
add
pop pointer 1
push that 0
pop local 3
push local 2
push local 0
add
push local 3
call Bullet.getX 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
push constant 1
add
push local 0
add
push local 3
call Bullet.getY 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
push constant 2
add
push local 0
add
push local 3
call Bullet.isActive 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
push constant 3
add
pop local 2
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 0
return
function BulletSet.dispose 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
call Bullet.dispose 1
pop temp 0
push local 1
call Memory.deAlloc 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push this 0
call Array.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return

function EnemyManager.new 1
push constant 11
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 1
push this 1
call Array.new 1
pop this 0
push argument 1
pop this 4
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop this 2
push constant 100
pop this 3
push constant 1
neg
pop this 5
push constant 0
pop this 6
push constant 511
pop this 7
push constant 1925
pop this 8
push constant 0
pop this 9
push constant 0
pop this 10
push pointer 0
return
function EnemyManager.getScore 0
push argument 0
pop pointer 0
push this 4
call HighScore.getCurrentScore 1
return
function EnemyManager.addScore 0
push argument 0
pop pointer 0
push this 4
push argument 1
call HighScore.addPoints 2
pop temp 0
push constant 0
return
function EnemyManager.update 2
push argument 0
pop pointer 0
push this 2
push constant 1
add
pop this 2
push this 2
push this 3
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 9
push this 10
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
call EnemyManager.spawnEnemyFromTop 1
pop temp 0
push this 9
push constant 1
add
pop this 9
goto IF_END1
label IF_FALSE1
push pointer 0
call EnemyManager.spawnEnemyFromBottom 1
pop temp 0
push this 10
push constant 1
add
pop this 10
label IF_END1
push constant 0
pop this 2
push this 3
push constant 30
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 3
push constant 1
sub
pop this 3
label IF_FALSE2
label IF_FALSE0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
push constant 0
eq
not
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 1
call EnemyJet.isActive 1
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 1
call EnemyJet.move 1
pop temp 0
goto IF_END4
label IF_FALSE4
push local 1
call EnemyJet.dispose 1
pop temp 0
push local 0
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END4
label IF_FALSE3
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function EnemyManager.spawnEnemyFromTop 7
push argument 0
pop pointer 0
push constant 0
pop local 6
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
push local 6
not
and
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop local 6
goto IF_END0
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
label IF_END0
goto WHILE_EXP0
label WHILE_END0
push local 6
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 6
push constant 373
add
pop this 6
push constant 50
push this 6
call MathLib.abs 1
push constant 350
and
add
pop local 1
push constant 10
pop local 2
push constant 1
push constant 5
call MathLib.random 1
add
pop local 3
push constant 3
call MathLib.random 1
pop local 4
push local 1
push local 2
push local 3
push local 4
push constant 0
not
call EnemyJet.new 5
pop local 5
push local 0
push this 0
add
push local 5
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE1
push constant 0
return
function EnemyManager.spawnEnemyFromBottom 7
push argument 0
pop pointer 0
push constant 0
pop local 6
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
push local 6
not
and
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop local 6
goto IF_END0
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
label IF_END0
goto WHILE_EXP0
label WHILE_END0
push local 6
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 6
push constant 937
add
pop this 6
push constant 50
push this 6
call MathLib.abs 1
push constant 350
and
add
pop local 1
push constant 1900
pop local 2
push constant 1
push constant 5
call MathLib.random 1
add
pop local 3
push constant 3
call MathLib.random 1
neg
pop local 4
push local 1
push local 2
push local 3
push local 4
push constant 0
call EnemyJet.new 5
pop local 5
push local 0
push this 0
add
push local 5
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE1
push constant 0
return
function EnemyManager.spawnEnemyMidArea 7
push argument 0
pop pointer 0
push constant 0
pop local 6
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
push local 6
not
and
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop local 6
goto IF_END0
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
label IF_END0
goto WHILE_EXP0
label WHILE_END0
push local 6
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 6
push constant 791
add
pop this 6
push constant 300
push constant 1000
call MathLib.random 1
add
pop local 2
push constant 1
push constant 5
call MathLib.random 1
add
pop local 3
push constant 3
call MathLib.random 1
push constant 1
sub
pop local 4
push this 6
push constant 1
and
push constant 0
eq
pop local 6
push this 7
push constant 10
sub
push local 2
push local 3
push local 4
push local 6
call EnemyJet.new 5
pop local 5
push local 0
push this 0
add
push local 5
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE1
push constant 0
return
function EnemyManager.spawnEnemy 6
push argument 0
pop pointer 0
push constant 0
pop local 4
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
push local 4
not
and
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop local 4
goto IF_END0
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
label IF_END0
goto WHILE_EXP0
label WHILE_END0
push local 4
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 6
push constant 781
add
pop this 6
push constant 20
push constant 1880
call MathLib.random 1
add
pop local 1
push constant 1
push constant 5
call MathLib.random 1
add
pop local 2
push this 7
push constant 10
sub
push local 1
push local 2
push constant 0
push constant 0
call EnemyJet.new 5
pop local 3
push local 0
push this 0
add
push local 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE1
push constant 0
return
function EnemyManager.checkCollisionWithPlayer 3
push argument 0
pop pointer 0
push constant 0
pop local 2
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
push local 2
not
and
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
call EnemyJet.isActive 1
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
push argument 1
push argument 2
call EnemyJet.checkCollision 3
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
not
pop local 2
label IF_FALSE2
label IF_FALSE1
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 2
return
function EnemyManager.checkBulletCollisions 7
push argument 0
pop pointer 0
push argument 1
call BulletSet.getActiveBulletPositions 1
pop local 3
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 2
push local 2
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 2
call EnemyJet.isActive 1
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push constant 15
lt
not
if-goto WHILE_END1
push local 1
push constant 2
add
push local 3
add
pop pointer 1
push that 0
pop local 6
push local 6
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 1
push local 3
add
pop pointer 1
push that 0
pop local 4
push local 1
push constant 1
add
push local 3
add
pop pointer 1
push that 0
pop local 5
push local 2
push local 4
push local 5
call EnemyJet.checkBulletHit 3
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 2
call EnemyJet.deactivate 1
pop temp 0
push argument 1
push local 1
push constant 3
call Math.divide 2
call BulletSet.deactivateBullet 2
pop temp 0
push pointer 0
push constant 10
call EnemyManager.addScore 2
pop temp 0
label IF_FALSE3
label IF_FALSE2
push local 1
push constant 3
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
label IF_FALSE1
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 3
call Array.dispose 1
pop temp 0
push constant 0
return
function EnemyManager.displayScore 1
push argument 0
pop pointer 0
push this 4
call HighScore.getCurrentScore 1
pop local 0
push local 0
push this 5
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
push constant 0
call Output.moveCursor 2
pop temp 0
push constant 7
call String.new 1
push constant 83
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push local 0
call Output.printInt 1
pop temp 0
push local 0
pop this 5
label IF_FALSE0
push constant 0
return
function EnemyManager.dispose 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
call EnemyJet.dispose 1
pop temp 0
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push this 0
call Array.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return

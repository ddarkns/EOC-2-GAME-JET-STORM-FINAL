function Bullet.new 0
push constant 5
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 0
pop this 2
push argument 1
pop this 3
push constant 0
pop this 4
push pointer 0
return
function Bullet.isActive 0
push argument 0
pop pointer 0
push this 4
return
function Bullet.getX 0
push argument 0
pop pointer 0
push this 0
return
function Bullet.getY 0
push argument 0
pop pointer 0
push this 1
return
function Bullet.activate 0
push argument 0
pop pointer 0
push this 4
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Bullet.erase 1
pop temp 0
label IF_FALSE0
push argument 1
push constant 16
add
pop this 0
push argument 2
pop this 1
push this 0
pop this 2
push this 1
pop this 3
push constant 0
not
pop this 4
push pointer 0
call Bullet.draw 1
pop temp 0
push constant 0
return
function Bullet.move 0
push argument 0
pop pointer 0
push this 4
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Bullet.erase 1
pop temp 0
push this 0
pop this 2
push this 1
pop this 3
push this 0
push constant 6
add
pop this 0
push this 0
push constant 510
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
pop this 4
goto IF_END1
label IF_FALSE1
push pointer 0
call Bullet.draw 1
pop temp 0
label IF_END1
label IF_FALSE0
push constant 0
return
function Bullet.draw 1
push argument 0
pop pointer 0
push constant 16384
push this 1
push constant 8
call Math.divide 2
push constant 32
call Math.multiply 2
add
push this 0
push constant 16
call Math.divide 2
add
pop local 0
push local 0
push constant 6
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 6
call Memory.poke 2
pop temp 0
push constant 0
return
function Bullet.erase 1
push argument 0
pop pointer 0
push constant 16384
push this 3
push constant 8
call Math.divide 2
push constant 32
call Math.multiply 2
add
push this 2
push constant 16
call Math.divide 2
add
pop local 0
push local 0
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 0
call Memory.poke 2
pop temp 0
push constant 0
return
function Bullet.dispose 0
push argument 0
pop pointer 0
push this 4
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Bullet.erase 1
pop temp 0
push constant 0
pop this 4
label IF_FALSE0
push constant 0
return

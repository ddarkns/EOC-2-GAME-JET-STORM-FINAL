function EnemyJet.new 0
push constant 8
call Memory.alloc 1
pop pointer 0
push static 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 100
pop static 0
push constant 1900
pop static 1
push constant 2
pop static 2
push constant 510
pop static 3
label IF_FALSE0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 0
pop this 2
push argument 1
pop this 3
push argument 2
pop this 4
push argument 3
pop this 5
push constant 0
not
pop this 6
push argument 4
pop this 7
push pointer 0
call EnemyJet.draw 1
pop temp 0
push pointer 0
return
function EnemyJet.getX 0
push argument 0
pop pointer 0
push this 0
return
function EnemyJet.getY 0
push argument 0
pop pointer 0
push this 1
return
function EnemyJet.isActive 0
push argument 0
pop pointer 0
push this 6
return
function EnemyJet.deactivate 0
push argument 0
pop pointer 0
push constant 0
pop this 6
push pointer 0
call EnemyJet.erase 1
pop temp 0
push constant 0
return
function EnemyJet.applyGravity 0
push argument 0
pop pointer 0
push this 7
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 5
push constant 4
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 5
push constant 1
add
pop this 5
label IF_FALSE1
goto IF_END0
label IF_FALSE0
push this 5
push constant 4
neg
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 5
push constant 1
sub
pop this 5
label IF_FALSE2
label IF_END0
push constant 0
return
function EnemyJet.move 0
push argument 0
pop pointer 0
push this 6
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call EnemyJet.erase 1
pop temp 0
push this 0
pop this 2
push this 1
pop this 3
push this 0
push this 4
sub
pop this 0
push pointer 0
call EnemyJet.applyGravity 1
pop temp 0
push this 1
push this 5
add
pop this 1
push this 0
push static 2
lt
push this 0
push static 3
gt
or
push this 1
push static 0
lt
or
push this 1
push static 1
gt
or
push this 1
push constant 20
lt
push this 0
push constant 100
lt
and
or
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
pop this 6
push pointer 0
call EnemyJet.erase 1
pop temp 0
goto IF_END1
label IF_FALSE1
push this 2
push this 0
eq
not
push this 3
push this 1
eq
not
or
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
call EnemyJet.draw 1
pop temp 0
label IF_FALSE2
label IF_END1
label IF_FALSE0
push constant 0
return
function EnemyJet.draw 1
push argument 0
pop pointer 0
push constant 16384
push this 1
push constant 8
call Math.divide 2
push constant 32
call Math.multiply 2
add
push this 0
push constant 16
call Math.divide 2
add
pop local 0
push local 0
push constant 384
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 960
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 960
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 4080
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 8184
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 8184
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 4080
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 960
call Memory.poke 2
pop temp 0
push constant 0
return
function EnemyJet.erase 1
push argument 0
pop pointer 0
push constant 16384
push this 3
push constant 8
call Math.divide 2
push constant 32
call Math.multiply 2
add
push this 2
push constant 16
call Math.divide 2
add
pop local 0
push local 0
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 0
call Memory.poke 2
pop temp 0
push constant 0
return
function EnemyJet.checkCollision 2
push argument 0
pop pointer 0
push this 0
push argument 1
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
push argument 1
sub
pop local 0
goto IF_END0
label IF_FALSE0
push argument 1
push this 0
sub
pop local 0
label IF_END0
push this 1
push argument 2
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 1
push argument 2
sub
pop local 1
goto IF_END1
label IF_FALSE1
push argument 2
push this 1
sub
pop local 1
label IF_END1
push local 0
push constant 20
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 1
push constant 20
lt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
not
return
label IF_FALSE3
label IF_FALSE2
push constant 0
return
function EnemyJet.checkBulletHit 2
push argument 0
pop pointer 0
push this 6
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push this 0
push argument 1
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 0
push argument 1
sub
pop local 0
goto IF_END1
label IF_FALSE1
push argument 1
push this 0
sub
pop local 0
label IF_END1
push this 1
push argument 2
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 1
push argument 2
sub
pop local 1
goto IF_END2
label IF_FALSE2
push argument 2
push this 1
sub
pop local 1
label IF_END2
push local 0
push constant 24
lt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 1
push constant 24
lt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 0
not
return
label IF_FALSE4
label IF_FALSE3
push constant 0
return
function EnemyJet.dispose 0
push argument 0
pop pointer 0
push pointer 0
call EnemyJet.erase 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
